// <auto-generated />
using System;
using DentiSys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentiSys.Migrations
{
    [DbContext(typeof(DentiSysDataContext))]
    partial class DentiSysDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DentiSys.Models.Dentista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CPF");

                    b.Property<DateTime?>("DataDeAniversario")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("DataDeAniversario");

                    b.Property<string>("Email")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Email");

                    b.Property<string>("Especializacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("Especialização");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("INT")
                        .HasColumnName("IdEndereco");

                    b.Property<int?>("Idade")
                        .HasColumnType("INT")
                        .HasColumnName("Idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Nome");

                    b.Property<string>("NumeroDeRegistro")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NumeroDeRegistro");

                    b.Property<string>("NumeroDeTelefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar")
                        .HasColumnName("NumeroDeTelefone");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CEP");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.ToTable("Dentistas", (string)null);
                });

            modelBuilder.Entity("DentiSys.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Cidade");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Estado");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Numero");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Pais");

                    b.Property<string>("Rua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CEP" }, "IX_Endereco_CEP")
                        .IsUnique();

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("DentiSys.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataDeAniversario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("DentiSys.Models.PacientePlano", b =>
                {
                    b.Property<int>("IdPlano")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<bool>("PlanoAtivo")
                        .HasColumnType("BIT")
                        .HasColumnName("PlanoAtivo");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.HasKey("IdPlano", "IdPaciente");

                    b.HasIndex("PlanoId");

                    b.ToTable("PacientePlanos", (string)null);
                });

            modelBuilder.Entity("DentiSys.Models.PacienteProcedimento", b =>
                {
                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdProcedimento")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataProcedimento")
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("DataProcedimento");

                    b.Property<bool>("ProcedimentoRealizado")
                        .HasColumnType("bit");

                    b.HasKey("IdPaciente", "IdProcedimento");

                    b.HasIndex(new[] { "ProcedimentoRealizado" }, "IX_PacienteProcedimento_ProcedimentoRealizado")
                        .IsUnique();

                    b.ToTable("PacienteProcedimentos", (string)null);
                });

            modelBuilder.Entity("DentiSys.Models.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coberturas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDePlano")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("DentiSys.Models.Dentista", b =>
                {
                    b.HasOne("DentiSys.Models.Endereco", "Endereco")
                        .WithOne("Dentista")
                        .HasForeignKey("DentiSys.Models.Dentista", "IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DentiSys.Models.Paciente", b =>
                {
                    b.HasOne("DentiSys.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DentiSys.Models.PacientePlano", b =>
                {
                    b.HasOne("DentiSys.Models.Plano", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("DentiSys.Models.Endereco", b =>
                {
                    b.Navigation("Dentista");
                });
#pragma warning restore 612, 618
        }
    }
}
